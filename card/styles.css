:root {
  --marge: 30px;
  --cornerSize: calc(var(--marge));
  --sizeMinusCorner: calc(100% - var(--cornerSize));
}
.container {
  text-align: center;
  margin-top: 50px;
}

.drawButton {
  width: 300px;
  height: 100px;
  font-size: 40px;
}

/* The flip card container - set the width and height to whatever you want. We have added the border property to demonstrate that the flip itself goes out of the box on hover (remove perspective if you don't want the 3D effect */
.flip-card {
  margin: 0 auto;
  background-color: transparent;
  width: 300px;
  height: 400px;
  perspective: 1000px; /* Remove this if you don't want the 3D effect */
}

/* This container is needed to position the front and back side */
.flip-card-inner {
  border: 2px solid black;
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 1s;
  transform-style: preserve-3d;
  border-radius: 1%;
}

/* CSS qui contrôle le retournement, déclenché par une classe */
.flip-card-inner.is-flipped {
  transform: rotateY(180deg);
}

/* Position the front and back side */
.flip-card-front,
.flip-card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden; /* Safari */
  backface-visibility: hidden;
}

/* Style the front side (fallback if image is missing) */
.flip-card-front {
  border-radius: inherit;
  background-color: #f8f8f8;
  text-align: center;
}

/* Style the back side */
.flip-card-back {
  border-radius: inherit;
  background-color: #f8f8f8;
  transform: rotateY(180deg);
  padding: var(--marge); /* Marge intérieure pour pousser l'enfant */
  box-sizing: border-box; /* S'assurer que le padding est inclus dans la largeur/hauteur */
  position: relative; /* Conteneur parent relatif pour le positionnement absolu des enfants */
  display: flex;
  justify-content: center; /* Centre horizontalement */
  align-items: center; /* Centre verticalement */
}

.title {
  font-size: xx-large;
  margin-top: 25px;
  margin-bottom: 50px;
  margin-left: 25px;
  margin-right: 20px;
  letter-spacing: calc(5px);
  font-stretch: ultra-expanded; /* Augmente la hauteur des lettres */
  text-decoration: underline; /* Ajoute une ligne sous le mot */
  text-decoration-thickness: 7px; /* Épaissit la ligne */
  text-underline-offset: 10px; /* Décale la ligne vers le bas de 3 pixels */
}

.category {
  font-size: small;
  display: flex;
  justify-content: space-between;
  margin-bottom: 15px;
  margin: 15px;
  padding: 10px 5px;
  border-radius: 1%;
}

.category-content {
  font-size: medium;
  margin-left: 5px;
  font-weight: 700;
  transition: filter 0.5s ease; /* Ajoute une transition pour une animation fluide */
}

.custom-shape {
  width: 100%;
  height: 100%;
  position: relative;
  background-color: black;
  clip-path: polygon(
    var(--cornerSize) 0%,
    var(--cornerSize) var(--cornerSize),
    0% var(--cornerSize),
    0% var(--sizeMinusCorner),
    var(--cornerSize) var(--sizeMinusCorner),
    var(--cornerSize) 100%,
    var(--sizeMinusCorner) 100%,
    var(--sizeMinusCorner) var(--sizeMinusCorner),
    100% var(--sizeMinusCorner),
    100% var(--cornerSize),
    var(--sizeMinusCorner) var(--cornerSize),
    var(--sizeMinusCorner) 0%
  );
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1; /* S'assure que game-board est au-dessus des autres éléments */
}

.custom-shape::after {
  content: "";
  width: calc(100% - 5px);
  height: calc(100% - 5px);
  position: absolute;
  background-color: #f8f8f8;

  clip-path: polygon(
    var(--cornerSize) 0%,
    var(--cornerSize) var(--cornerSize),
    0% var(--cornerSize),
    0% var(--sizeMinusCorner),
    var(--cornerSize) var(--sizeMinusCorner),
    var(--cornerSize) 100%,
    var(--sizeMinusCorner) 100%,
    var(--sizeMinusCorner) var(--sizeMinusCorner),
    100% var(--sizeMinusCorner),
    100% var(--cornerSize),
    var(--sizeMinusCorner) var(--cornerSize),
    var(--sizeMinusCorner) 0%
  );
}
